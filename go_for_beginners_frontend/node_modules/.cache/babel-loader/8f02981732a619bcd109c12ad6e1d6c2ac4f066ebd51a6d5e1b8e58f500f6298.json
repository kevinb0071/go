{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kevin\\\\go_for_beginners_frontend\\\\src\\\\StripePayment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport PaymentForm from \"./PaymentForm\";\nimport \"./StripePayment.css\";\n\n// Make sure to call loadStripe outside of a component’s render to avoid\n// recreating the Stripe object on every render.\n// This is your test publishable API key.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51N6g21FYHZv4Kiq3eKyjEDsqylYRm6Z9oeOI9OArrdJRMvvkXE73gxUsETV83RGyXPRgaXzziJJuOIXzQkVrhCP900Y1wjIVfG\");\nexport default function StripePayment({\n  customerData\n}) {\n  _s();\n  const [clientSecret, setClientSecret] = useState(\"\");\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    fetch(\"/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(customerData)\n    }).then(res => res.json()).then(data => setClientSecret(data.clientSecret));\n  }, []);\n  const appearance = {\n    theme: \"stripe\"\n  };\n  const options = {\n    clientSecret,\n    appearance\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StripePayment\",\n    height: \"100%\",\n    width: \"100%\",\n    children: clientSecret && /*#__PURE__*/_jsxDEV(Elements, {\n      options: options,\n      stripe: stripePromise,\n      children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(StripePayment, \"jqw4P0KD6AlEQm6tlb46UlrlFAA=\");\n_c = StripePayment;\nvar _c;\n$RefreshReg$(_c, \"StripePayment\");","map":{"version":3,"names":["React","useState","useEffect","loadStripe","Elements","PaymentForm","jsxDEV","_jsxDEV","stripePromise","StripePayment","customerData","_s","clientSecret","setClientSecret","fetch","method","headers","body","JSON","stringify","then","res","json","data","appearance","theme","options","className","height","width","children","stripe","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kevin/go_for_beginners_frontend/src/StripePayment.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\n\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport \"./StripePayment.css\";\r\n\r\n// Make sure to call loadStripe outside of a component’s render to avoid\r\n// recreating the Stripe object on every render.\r\n// This is your test publishable API key.\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51N6g21FYHZv4Kiq3eKyjEDsqylYRm6Z9oeOI9OArrdJRMvvkXE73gxUsETV83RGyXPRgaXzziJJuOIXzQkVrhCP900Y1wjIVfG\"\r\n);\r\n\r\nexport default function StripePayment({ customerData }) {\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Create PaymentIntent as soon as the page loads\r\n    fetch(\"/create-payment-intent\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(customerData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setClientSecret(data.clientSecret));\r\n  }, []);\r\n\r\n  const appearance = {\r\n    theme: \"stripe\",\r\n  };\r\n  const options = {\r\n    clientSecret,\r\n    appearance,\r\n  };\r\n\r\n  return (\r\n    <div className=\"StripePayment\" height=\"100%\" width=\"100%\">\r\n      {clientSecret && (\r\n        <Elements options={options} stripe={stripePromise}>\r\n          <PaymentForm />\r\n        </Elements>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,yBAAyB;AAElD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,qBAAqB;;AAE5B;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGL,UAAU,CAC9B,6GACF,CAAC;AAED,eAAe,SAASM,aAAaA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd;IACAY,KAAK,CAAC,wBAAwB,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;IACnC,CAAC,CAAC,CACCU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,eAAe,CAACU,IAAI,CAACX,YAAY,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,UAAU,GAAG;IACjBC,KAAK,EAAE;EACT,CAAC;EACD,MAAMC,OAAO,GAAG;IACdd,YAAY;IACZY;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAACC,MAAM,EAAC,MAAM;IAACC,KAAK,EAAC,MAAM;IAAAC,QAAA,EACtDlB,YAAY,iBACXL,OAAA,CAACH,QAAQ;MAACsB,OAAO,EAAEA,OAAQ;MAACK,MAAM,EAAEvB,aAAc;MAAAsB,QAAA,eAChDvB,OAAA,CAACF,WAAW;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CA/BuBF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}